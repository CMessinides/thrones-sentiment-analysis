include ./src/mixins

doctype html
html.h-full.overflow-y-scroll.no-js(lang='en')
	head
		meta(charset='UTF-8')
		meta(name='viewport' content='width=device-width, initial-scale=1.0')
		meta(http-equiv='X-UA-Compatible' content='ie=edge')
		title The Game of Thrones Characters that Fans Love (to Hate)
		meta(name='description' content='A sentiment analysis of over 300,000 Reddit comments reveals how fans really feel about characters from HBO’s blockbuster series.')
		script.
			document.documentElement.classList.remove('no-js')
		link(rel='stylesheet' href='./src/style.css')
		link(href='https://fonts.googleapis.com/css?family=Alegreya:400,400i,700,700i|Eczar:700&display=swap' rel='stylesheet')
	body.bg-subtle-100.h-full.text-subtle-700.leading-normal.font-body
		//- Icon spritesheet
		include src/icons.svg
		//- Site header
		header
		aside.c-banner
			.o-container.o-container--wide.c-banner__container
				svg.c-icon.c-banner__icon.border-4.rounded-full(width="24" height="24" style={ "border-color": "rgba(255,255,255,0.33)"})
					use(href="#icon-error")
				p
					| #[strong You are viewing a draft version of this essay.]
					| I&rsquo;m hard at work on the final version right now, but in the meantime, excuse the gaps!
		main
			//- Essay body
			article
				//- Essay cover
				header.c-cover
					.c-cover__text
						h1.o-container.o-container--wide.c-cover__title
							| The 
							cite.italic.font-body.text-emphasis-700 Game of Thrones
							|  Characters that Fans Love to&nbsp;Hate
						.o-container
							p.c-cover__blurb
								| A sentiment analysis of over 300,000 Reddit comments reveals how fans #[em really]
								| feel about characters from HBO&rsquo;s blockbuster series.
							p.c-cover__byline
								| A visual essay by 
								a(href='https://www.cmessinides.com' rel='noopener' target='_blank') Cameron Messinides
					small.text-base.inline-block.mb-5.text-emphasis-700.italic (Spoilers!)
					img.block.mx-auto(src='./src/static/characters.png' alt='' width='420' height='90' style='opacity:0.9')
				+textContent
						//- Intro
						include:markdown-it(html typographer) ./content/intro.md
						//- A sentiment analysis primer
						include:markdown-it(html typographer) ./content/what-is-sentiment-analysis.md
				+exampleComments("Example Reddit Comments with Sentiment Scores")#sentiment-analysis-illustration-1
					+exampleComment("Brienne_Fan_1", "54 minutes", 0.84)
						| I&rsquo;m so happy brienne got knighted, she&rsquo;s come a longway and dealt with so much Bs, so proud of her.
					+exampleComment("Didnt_Read_The_Books", "2 hours", -0.87)
						| No death in this series has given me more feels then that&hellip;I&rsquo;m so scared of what is to come&hellip;
				+textContent
						//- Sentiment analysis primer (contd.)
						:markdown-it(typographer)
							In the first comment, words like "happy" and "proud" led to a
							positive score. Likewise, in the second, words like "death" and
							"scared" resulted in a negative one.

							This project goes one step further by calculating a sentiment
							score not only for each comment, but for each sentence that
							mentions a significant character. Here's how VADER scored two
							sentences that mention Cersei:
				+exampleComments("Sentences about Cersei Lannister with Sentiment Scores")#sentiment-analysis-illustration-2
					+exampleComment("I_<3_Lannisters", "4 days", 0.78)
						| Cersei deserves to win she’s far smarter than anyone on the “good” side.
					+exampleComment('Cersei_H8R', "4 days", -0.89)
						| Cersei deserved a violent and painful death for all she has done.
				+textContent
					//- Sentiment analysis primer (contd.)
					:markdown-it(typographer)
						The scores turn out as expected: VADER gave a positive score to the
						sentence praising Cersei and a negative score to the one wishing
						her an agonizing end. But sentiment scores don't always line up so
						neatly with the way human readers interpret a sentence. Many factors
						contribute to a sentence's final sentiment score, and a positive or
						negative rating doesn't always mean what we think it should mean.

						We can see some of the limitations of sentiment analysis by taking a
						look at two more sentences that mention Cersei:
				+exampleComments("Sentences about Cersei Lannister with Confusing Sentiment Scores")#sentiment-analysis-illustration-3
					+exampleComment("Dany_Over_Cersei", "3 weeks", 0.83)
						| She truly wants to be a better ruler than Cersei, a better person.
					+exampleComment("Lena_H_Fan", "1 month", -0.83)
						| Lena Headey is just KILLING IT with her portrayal of Cersei losing her grip on reality.
				+textContent
					//- Sentiment analysis primer (contd.)
					:markdown-it(typographer)
						VADER classified the first sentence as a positive one for Cersei
						because of words like "better" and "truly", but us humans reading
						the same sentence would more likely conclude that it reflects
						negatively on Cersei. We would also probably count this as a
						positive sentiment for the unnamed "she" in the sentence, but a
						computer can't assign a score to a character if she isn't
						explicitly mentioned.

						And in the opposite scenario, VADER gives a negative rating to
						the second sentence, but we can clearly see it's a glowing
						compliment&mdash;and not for Cersei the character, but for Lena
						Headey the actor. Sentiment analysis can't tell the difference
						between a sentence about a character and a sentence about
						something unrelated that happens to mention the character. For
						this reason, comments praising actors or [bashing the writing
						in Season 8](https://www.vanityfair.com/hollywood/2019/05/game-of-thrones-season-8-remake-petition-hbo)
						will muddy the waters when we try to look at sentiments for
						individual characters.
					aside
						:markdown-it(html typographer)
							One more cautionary tale about sentiment analysis:
							an earlier draft of this essay included Ghost,
							Jon's direwolf, as a character &mdash; that was, until I
							checked the results and found that on average, sentences that
							mentioned Ghost were by far the most negative of any character.
							That's because the word "ghost" has [a moderately negative
							sentiment rating of -1.3 in VADER](https://github.com/cjhutto/vaderSentiment/blob/b045da3c5a29ed130777a16dc78588f53da54a05/vaderSentiment/vader_lexicon.txt#L3254).

							In an ideal world, I would use a sentiment analyzer tuned to the
							language of <cite>Game of Thrones</cite>, where "Ghost"could be
							a neutral word, but I have neither the expertise nor the
							resources to create such a tool. VADER works well enough for 99
							percent of characters in the series, but unfortunately for Ghost,
							[we'll have to leave our dear direwolf behind](https://youtu.be/8JFwkRcpukk?t=173)
							for this project.
				+textContent
						+__temporaryWIPNotice
						//- Analysis of all comments
						include:markdown-it(html typographer) ./content/the-big-picture.md
						+__temporaryWIPNotice
				+visualization('overall-scores-viz')
				+textContent
					+__temporaryWIPNotice
					h2 The Breakdown by Character
					+__temporaryWIPNotice
					aside
						p In the following charts:
						ul.c-legend
							li.c-legend__item
								figure.c-legend__figure
									svg.c-legend__icon(width="48" height="48" aria-labelled-by="legend-overall-line-title")
										title#legend-overall-line-title Transparent purple line
										path.c-chart-line.c-chart-line--subtle(d="M0,10L2,12L13,27L24,23L35,33L46,23L48,22" aria-hidden="true")
									figcaption.c-legend__caption
										| The #[strong line] shows the change in overall average sentiment by episode, just like the previous chart.
										| It&rsquo;s a good measure of #[strong how fans reacted to a particular episode].
							li.c-legend__item
								figure.c-legend__figure
									svg.c-legend__icon(width="48" height="48" aria-labelled-by="legend-point-title")
										title#legend-point-title Purple points with error bars
										g.c-chart-point(aria-hidden="true" transform="translate(24,24)")
											line.c-chart-point__interval(x1="0" x2="0" y1="-24" y2="24")
											circle.c-chart-point__center(r="3")
										g.c-chart-point(aria-hidden="true" transform="translate(13,17)")
											line.c-chart-point__interval(x1="0" x2="0" y1="-8" y2="8")
											circle.c-chart-point__center(r="3")
										g.c-chart-point(aria-hidden="true" transform="translate(35,42)")
											line.c-chart-point__interval(x1="0" x2="0" y1="-27" y2="27")
											circle.c-chart-point__center(r="3")
									figcaption.c-legend__caption
										| Each #[strong point] represents the estimated average sentiment score of sentences mentioning the character
										| in the comments about a given episode. The bars extending above and below each point represent a 95%
										|
										| #[a(href="https://www.graphpad.com/guides/prism/7/statistics/stat_more_about_confidence_interval.htm?toc=0") confidence interval]
										|
										| for that estimate. It&rsquo;s a good measure of #[strong how fans reacted to the character in a particular episode].
							li.c-legend__item
								figure.c-legend__figure
									svg.c-legend__icon(width="48" height="48" aria-labelled-by="legend-area-title")
										title#legend-area-title Transparent purple circles
										g.c-chart-point(aria-hidden="true" transform="translate(13,17)")
											circle.c-chart-point__area(r=0.16*75)
										g.c-chart-point(aria-hidden="true" transform="translate(35,42)")
											circle.c-chart-point__area(r=0.21*75)
									figcaption.c-legend__caption
										| Each point also has a surrounding #[strong area]. The size of the area is proportionate to
										| how frequently the character was mentioned in the comments about a given episode.
										| It&rsquo;s a good measure of #[strong how much the character dominated the conversation about a particular episode].
									
				+visualization('jon-snow-viz')
				+textContent
					+__temporaryWIPNotice
				+visualization('searchable-character-viz')
				+textContent
					+__temporaryWIPNotice
					h2 Who Did Fans Mourn the Most?
					+__temporaryWIPNotice
				+visualization('hodor-viz')
				+textContent
					+__temporaryWIPNotice
					h2 Who Did Fans Hate the Most?
					+__temporaryWIPNotice
				+visualization('stannis-viz')
		//- Site footer
		footer
		script(async='' src='./src/main.js')
